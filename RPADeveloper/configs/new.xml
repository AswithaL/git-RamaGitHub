<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
scriptlang="groovy">
<robotics-flow>
<robot driver="chrome" name="roboticsDriver"
close-on-completion="true">
<script><![CDATA[
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.*;
movieNames = [
"The Shawshank Redemption",
"The Godfather",
"Forrest Gump",
"The Dark Knight",
"12 Angry Men",
"Schindler's List",
"Pulp Fiction",
"The Lord of the Rings: The Return of the King",
"Whiplash",
"Fight Club"
]
//timeouts(40 * 1000)
open("http://www.imdb.com")
sleep(10000)
finalReport = "<html><head><style>table, th, td {border: 1px solid blue;}</style></head><body><table style='width:100%'><tr><th>Movie Title</th><th>Year</th><th>Director</th><th>Rating</th><th>Stars</th><th>Box Office</th><th>Storyline</th><th>Poster Link</th></tr>";
for(String title:movieNames){
$(byId("navbar-query")).clear();
$(byId("navbar-query")).sendKeys(title).sendKeys(Keys.ENTER);
$(byLinkText(title)).sendKeys(Keys.chord(Keys.CONTROL,Keys.RETURN));
sleep(6000)
tabs = new ArrayList (driver().getWindowHandles());
switchTo().window(tabs.get(1));
year = $(byXpath('//*[@id="titleYear"]/a')).text();
director = $(byXpath("//*[@id='title-overview-widget']")).text();
rating = $(byXpath("//*[@itemprop='ratingValue']")).text()
stars = $$(byXpath("//*[@itemprop='actors']")).getTexts().join(" ");
boxOffice = $(byXpath("//*[@id='titleDetails']/div[9]")).text();
story = $(byXpath("//*[@id='titleStoryLine']/div[1]/p")).text();
posterLink = $(byXpath("//*[@class='poster']/a/img")).getAttribute("src");
finalReport += "<tr><td>"+title+"</td><td>"+year+"</td><td>"+director+
"</td><td>"+rating+"</td><td>"+stars+"</td><td>"+boxOffice+
"</td><td>"+story+"</td><td><a href=\""+posterLink+"\"</a>Poster Link</td></tr>";
close();
switchTo().window(tabs.get(0));
}
finalReport += "</table></body></html>";
]]></script>
</robot>
</robotics-flow>
<!-- Writing the HTML document to S3, so that it can be used to copy paste 
into email's body -->
<var-def name="htmlReportLink">
<s3 bucket="wf-vr-training" >
<s3-put path="temp.bucket/21033/finalReport.html" acl="PublicRead"
content-type="text/html; charset=utf-8" content-disposition="inline">
<template>${finalReport}</template>
</s3-put>
</s3>
</var-def>


    <export include-original-data="true">
    
    </export>

</config>